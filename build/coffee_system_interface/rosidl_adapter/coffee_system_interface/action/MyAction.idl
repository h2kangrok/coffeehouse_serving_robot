// generated from rosidl_adapter/resource/action.idl.em
// with input from coffee_system_interface/action/MyAction.action
// generated code does not contain a copyright notice


module coffee_system_interface {
  module action {
    @verbatim (language="comment", text=
      "Goal: 로봇이 수행해야 하는 목표를 설정하는 부분")
    struct MyAction_Goal {
      @verbatim (language="comment", text=
        "로봇이 이동해야 하는 목표 위치의 이름")
      int32 table_num;

      @verbatim (language="comment", text=
        "목표 위치에 도착 후 로봇이 대기할 시간 (단위: 초)")
      float wait_time;
    };
    @verbatim (language="comment", text=
      "Result: 목표 작업이 완료된 후 반환되는 결과 정보")
    struct MyAction_Result {
      @verbatim (language="comment", text=
        "작업 성공 여부를 나타내는 플래그 (true = 성공, false = 실패)")
      boolean success;

      @verbatim (language="comment", text=
        "작업 결과에 대한 메시지 (예: \"성공적으로 목표 위치에 도달하였습니다.\" 또는 \"목표 위치에 도달하지 못했습니다.\")")
      string message;

      @verbatim (language="comment", text=
        "작업 완료 시 로봇이 최종적으로 도달한 위치의 이름")
      string final_location;

      @verbatim (language="comment", text=
        "작업 수행에 소요된 총 시간 (단위: 초; 이동 시간 + 대기 시간 포함)")
      float total_time;
    };
    @verbatim (language="comment", text=
      "Feedback: 작업이 진행되는 동안 실시간으로 제공되는 피드백 정보")
    struct MyAction_Feedback {
      @verbatim (language="comment", text=
        "작업의 현재 상태를 나타내는 텍스트 (예: \"목표 위치로 이동 중\", \"위치에서 대기 중\", \"작업 완료\")")
      string current_state;

      @verbatim (language="comment", text=
        "작업 시작 후 경과한 시간 (단위: 초; 현재 상태까지 걸린 시간)")
      float time_elapsed;

      @verbatim (language="comment", text=
        "로봇의 현재 위치 (이동 중이라면 목표 위치와 다를 수 있음)")
      string current_location;
    };
  };
};
